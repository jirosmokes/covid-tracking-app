<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEBLAEsAAD/4QBWRXhpZgAATU0AKgAAAAgABAEaAAUAAAABAAAAPgEbAAUAAAAB
        AAAARgEoAAMAAAABAAIAAAITAAMAAAABAAEAAAAAAAAAAAEsAAAAAQAAASwAAAAB/9sAQwAIBgYHBgUI
        BwcHCQkICgwUDQwLCwwZEhMPFB0aHx4dGhwcICQuJyAiLCMcHCg3KSwwMTQ0NB8nOT04MjwuMzQy/9sA
        QwEJCQkMCwwYDQ0YMiEcITIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIy
        MjIyMjIy/8AAEQgBaAKAAwEiAAIRAQMRAf/EAB8AAAEFAQEBAQEBAAAAAAAAAAABAgMEBQYHCAkKC//E
        ALUQAAIBAwMCBAMFBQQEAAABfQECAwAEEQUSITFBBhNRYQcicRQygZGhCCNCscEVUtHwJDNicoIJChYX
        GBkaJSYnKCkqNDU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6g4SFhoeIiYqSk5SV
        lpeYmZqio6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV1tfY2drh4uPk5ebn6Onq8fLz9PX29/j5
        +v/EAB8BAAMBAQEBAQEBAQEAAAAAAAABAgMEBQYHCAkKC//EALURAAIBAgQEAwQHBQQEAAECdwABAgMR
        BAUhMQYSQVEHYXETIjKBCBRCkaGxwQkjM1LwFWJy0QoWJDThJfEXGBkaJicoKSo1Njc4OTpDREVGR0hJ
        SlNUVVZXWFlaY2RlZmdoaWpzdHV2d3h5eoKDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5
        usLDxMXGx8jJytLT1NXW19jZ2uLj5OXm5+jp6vLz9PX29/j5+v/aAAwDAQACEQMRAD8A9yozSUUALRSZ
        paACiikoAKjdO4H1FSUUAV6KkdO4H1FR0AFLmkooAWijNFABRRRQAUUUUAFFFFAC0UlGQBk0ALnHJqNj
        k+1DHJ9qSgAooooAKKKKACiiigAooooAKKKKACgAk4FKAScAVMFCjAoAQKFGB+dLS0lABSUtFACUUUUA
        GKSloxQAlFFFACUUtJQAUUUUAJRS0lABRRRQAmKKWkxQAUUUUAFFFFABRRRQAUUUUAFFFFABSUUUAFFF
        FABS0UUAFFFFABRRRQAUUUUAFGKMUtAFiiiigAozikNFAC0UmaWgAooooAKjdOcj8RT80UAQUVI6dx+I
        qOgApc0lFAC0UZooAKKKKACiijOBQAZwKYTk+1BOT7UlABRRRQAUUUUAFFFFABRRRQAUUUUAFKAWOBQF
        LHAqcIFGB+PvQAKoUYH40uKKKAEooooASilpKACkpaKAEooooAMUlLRigBKKKKAEopaSgAooooASilpK
        ACiiigBMUUtJigAooooAKKKKACiiigApKKKACiiigApaKKACiiigAooooAKKKKACjFGKWgAooooAsUho
        NFABRRRQAUZoooAWkzRmigAooooAKY6dx+Ip9FAEFFPZecj8RTKAClzSUUALRRmjOBQAZwKYTk+1BOT7
        UlABRRRQAUUUUAFFFFABRRRQAUUUUAFKqljgChVLHAFWFQIMD8T60ACoEGB+JpaWkNABikpaMUAJSYpa
        KAEooxRQAlFLSUAFJS0UAJRRRQAYpKWnJGXOegHU0AEcZc5PAHU1M0asuAMEdDThgDAGAKWgCmQVJBGC
        KSrboHGDwR0NVSCpIIwRQAlFFFACUUtJQAUUUUAJiilpMUAFFFFABTc0ZooAWikzS0AFLRRQAUUUUAFF
        FFABRRRQAUYoxS0AFFFFABRRRQBPRRRQAUUUUAFJmjNFABRmiigBaKTNLQAUlFFABTGXuPxFPooAhop7
        L3H5UygAphJNKTmkoAKKKKACiiigAooooAKKKKACiiigAooooAlicLlTgZ71PiqdTRy4wrHjsaAJaKXF
        JQAlFLSUAGKSloxQAlJilooASilxSUAJRS0lABSUtPRC554AoARELnJ4A6mrAAAwOAKQAAYHA7UtABik
        paMUAFNdA4weCOhpaWgCmQVJBGCKSrboHGDwR0NVSCpIIwRQAlFFFACUUtJQAUUUZ4oAT3puaCcmigAo
        oooAKUHFJRQA6im5p1ABRRRQAUUUUAFGKMUtABRRRQAUUUUAFFFLigCaiiigApM0ZooAKKKKACiiigAp
        M0uaSgBaKM0UAFFFHSgA6VE4ycj8qcTmkoAiopzL3FNoAKKKKACiiigAooooAKKKKACiiigAooooAKKK
        KAJo5cYVjx2NTYqnU0cuMKx47GgCWilxSUAJRS0lABikpaMUAJSUtFACUUYpyIWOTwKABELHJ4A71PgA
        AAYAowAMAcCigAooooAKKKKADFJS0YoAKa6Bxg8EdDS0tAFMgqSCMEUlW3QOMHgjoaqkFSQRgigBKKKM
        gDJoATpTSc0hOTRQAUUUUAFFFFABRRRQAUZoooAdRTc06gAoxRiloAKKKKACiiigAoopcUAGKKKKAJqT
        NFFABRRRQAUUUUAFJmjNFABRRRQAUuaSigBaYTmgnPFJQAUUUUAFMZe4p9FAEVFOZe4ptABRRRQAUUUU
        AFFFFABRRRQAUoUkEgE460qIXOB07n0qyAFGAOlAFSippI+rKPqKhoAKKKKAJo5cYVjx2NTVTqaKXHys
        eOxoAlopcUlACUUtJQAYpKWnKm45PAoARELHngVNjAxjApcADAGBRQAlL1pMUUAFFL1pKACiiigAoooo
        AMUlLRigAproHGDwR0NLS5AGTQBTYFCQeCKiJJNWpFEg54I6GqxBBIPBFACUUUUAFFFFABRRRQAUUUUA
        FFFFABSg460lFAD6KaDjg06gAooooAKKKXFABiiiigAooooAkpc0lFAC0UZooAKSjNFABRRRQAUUUUAF
        NJoJpKACiiigAooooAKKKTNAC5phHcU6igCOinEdxTaACiiigAooooAKciFzgcDuaEQucD8T6VZACgAD
        AoAAAowBxRRRQAVFJHnLKPqKkNFAFWipZI/4lH1FRUAFFFFAE0cuMKx47Gpqp1NHLjCseOxoAlopcUqo
        WOegFACKhJ56VMBgYHApcADA6UlABRRRQAUmKWigBKXrSYooAKKXrSUAFHSiigAoooyAMmgBDgDJqMkk
        +1BJJ9qSgBaa6Bx6EdDS0tAFQggkEYIpKtOgcehHQ1VIKkgjkUAFFFFABRRRQAUUVNHFjDMOewoAI4sY
        Zhz2FLJFu+Yde49alpKAKlFTyR55HXv71BQAUoOODSUUAPopoOOvSn0AFFFFABRRRQAUUUtAD6KKKACj
        OaSigBaKTNLQAUUUUAFNJoJpKACiiigAooooAKKKTNABmiiigAooooAKaR3FOooAjopxHcU2gApyIXOB
        07n0oRC5wOnc+lWQoUYHSgAUBRgCiiigApM0ZooAKKKSgAqN07gfUVJRQBWoqR07j8RUdABRRTlUsfag
        CWBiTtY8dj/SrmABgVTwAMCpY5cYVjx2NAE9FFFACUUtJQAUUUUAFJilooASl60mKKACil60hIAyTxQA
        EgDJqIsSfakZix9vSkoAWikzS0AFFFFAC010DjHQ9jS0tAFMgqSCORRVp0DjngjoaqkFSQRyKACiipo4
        ujMPoKACOLGGYc9hU1FJQAUUUUAFRyJnkde49afmigCrRU0keeR17j1qGgApwOODTaKAJKKaDjg06gAo
        opaACiiigB9JRRQAUUUUAFGaKKAFppNBNJQAUUUUAFFFFABRRSZoAM0UUUAFFFFABRRRQAUUUUAFAjLn
        jp3PpSohc4HTufSrIAUAAYFAEaqFGAMClpxHcU2gApM0ZooAKKKSgAooozQAZpKKKACo3TuPxFPzTlXJ
        9qAIFXceelS4AGBTmTjKj8KbQAUUUUASxy4wrHjsanqnUscuMKx47GgCeiiigBKKWkoAKKKKACkxS0hI
        AyTxQAEgDJNQsxY+3YUjsW9h2FJQAtFFFABRmiigBaKTNLQAUUUUALTXQOOeCOhpanjix8zD6CgCokJU
        5cYI6D+tS1adA454I6GqpBBIPagBKKKKACkzRmigAooooAKjdM8jr/On0UAVqKmdM8gc9x61DQAU4HHB
        ptFAEtFMDY4PSn0AFFFSInc/gKAG0UUUAFFFFABSZozSUAFFFFABRRRQAUUUmaADNFFFABRRRQAUUUUA
        FFFGaADNKiFzgdO59KEQucDp3PpVkAKMAYFAAAFGAMCiiigAppHcU7NJQAyilI7im0AFFFGaADNJRRQA
        UmaM05VyeelAAq561JgdBRjAwKTNABmmMvcU+igCKinMvcdfSm0AFFFFAEscuMKx47Gp6p1LHLjCseOx
        oAnooooASilppOBknAoACQASTgCoWcsfQdhSM5c+g7CkoAKKKKAClpKKAFooooAKM0UUALRSZqeOPGGY
        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
        AFAzTqBRQAUUUUAOBzwaWmUoOeDQAtFFFABRmikoAWiiigApKWk60AJmjNHSkoAKUUlFAC0UCigAoooo
        AKM4oNJQAtJRS0AKrFTkfiPWpwwYZHSq1KrFTkfiKALFFICCAR0paACikpc0AFFFFABSZoooAWikpaAC
        jNGaSgApc0lFAC0UZpKACiiigBc1E754B47mh3zwOnc1HQAUlGaKAJo5eisfoamqnU0cvRWP0NAE1FFF
        ACUlLSUAFFFFAFSiiigAooooAKKKKACkozRQAUUUUAFFFFABS0UUAFFFFABRRSZoAM0UUoGfpQAAZ+lP
        x2oooAKKKKACiiigAooooAUHPBpabS5z160AFFFFABS0lFABmjNFJQAUlLRQAlFFFABSikooAWijNJQA
        UUUUAFFFFAC0lFLQAKxU5HTuKmBDDIqClVivP5igCeikBBGR0paAFzSUlGaAFooooAKTNGaKAFopKWgA
        oopKACiiigBajd88Dp3NIz5GB07mmUAFJmjNFABRRRQAUUUUATRy9FY/Q1LVOpo5eisfoaAJqKKKAEop
        aSgCpRRRQAUUUUAFJmiigAooooAKKKKAClpKM0ALRRRQAUUUmaACiinAZ57UAIBnntT+lL2xSYoAKKKK
        ACiiigAooooAKKBRQAUUUUALnPWikoznigAozQaSgApaSigBaKKKACkpaKAEoopKAClpKKAFooooAKKK
        KACiiigBaSiloAFYrz+YqUEEZFQ0oJU5FAE1FICCMiloAM0ZozRmgAooooAKKKSgBc5opKWgAqN37Dp3
        NDv2HTuaZQAUmaM0UAFFFFABRRRQAUlFFABRRRQBNHL0Vj9DU1U6mjl6Kx+hoAmpKWkoAqUUUUAFJRRQ
        AUUUUAFFFFABRRRQAUUUUAGaWiigBM0UUUAOAyfan/SiigAooooASiiigAooooAKKKKACgUUUAFFFFAB
        mkoooAWkoooAKKKKACloooAKKKKAEpKKKACiiigApaKKACiiigAooooAKKKKAFpKKKAFBIORUuQRkUUU
        AFFFFAC5ooooASiiigApjNngdO5oooAZSZoooAKKKKACiiigApKKKACiiigAooooAKSiigCaOXorH6Gp
        qKKAP//Z
</value>
  </data>
</root>